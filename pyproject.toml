[tool.poetry]
name = "aws-echo-lambda"
version = "1.0.0"
description = "\"Simple Lambda example. Use it as a temaplate for your lambda project.\""
authors = ["Damian Giebas <damian.giebas@gmail.com>"]
license = "BSD 3-Clause License"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.aws-echo-lambda.dependencies]
boto3 = "^1.29.1"

[tool.poetry.group.dev.dependencies]
pylint = "^3.0.2"
mypy = "^1.7.0"
bandit = "^1.7.5"
isort = "^5.12.0"
black = {extras = ["d"], version = "^23.11.0"}
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pip-audit = "^2.6.1"


[tool.poetry.group.docs.dependencies]
sphinx = {extras = ["sphinx-autodoc", "sphinx-coverage", "sphinx-doctest", "sphinx-githubpages"], version = "^7.2.6"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
profile = "black"
sections=["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
# produce a section with both FIRSTPARTY and LOCALFOLDER modules combined
no_lines_before="LOCALFOLDER"
known_first_party="app"

import_heading_stdlib="Standard Library"
import_heading_thirdparty="External Dependencies"
import_heading_firstparty="Current App"
